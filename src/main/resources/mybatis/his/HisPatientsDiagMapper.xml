<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.his.diagnosis.mapper.HisPatientsDiagMapper">
    
    <resultMap type="HisPatientsDiag" id="HisPatientsDiagResult">
        <result property="patientId"    column="patient_id"    />
        <result property="userId"    column="user_id"    />
        <result property="patientName"    column="patient_name"    />
        <result property="patientSex"    column="patient_sex"    />
        <result property="patientBirthDate"    column="patient_birth_date"    />
        <result property="patientAge"    column="patient_age"    />
        <result property="patientIdCardNum"    column="patient_id_card_num"    />
        <result property="patientMedCardNum"    column="patient_med_card_num"    />
        <result property="patientPhoneNum"    column="patient_phone_num"    />
    </resultMap>

    <resultMap id="HisPatientsDiagHisMedicalRecordResult" type="HisPatientsDiag" extends="HisPatientsDiagResult">
        <collection property="hisMedicalRecordList" notNullColumn="sub_rec_id" javaType="java.util.List" resultMap="HisMedicalRecordResult" />
    </resultMap>

    <resultMap type="HisMedicalRecord" id="HisMedicalRecordResult">
        <result property="recId"    column="sub_rec_id"    />
        <result property="patientId"    column="sub_patient_id"    />
        <result property="recTime"    column="sub_rec_time"    />
        <result property="recChiefComplaint"    column="sub_rec_chief_complaint"    />
        <result property="regDiagnosis"    column="sub_reg_diagnosis"    />
        <result property="regNotes"    column="sub_reg_notes"    />
    </resultMap>

    <sql id="selectHisPatientsDiagVo">
        select patient_id, user_id, patient_name, patient_sex, patient_birth_date, patient_age, patient_id_card_num, patient_med_card_num, patient_phone_num from his_patients
    </sql>

    <select id="selectHisPatientsDiagList" parameterType="HisPatientsDiag" resultMap="HisPatientsDiagResult">
        <include refid="selectHisPatientsDiagVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="patientName != null  and patientName != ''"> and patient_name like concat('%', #{patientName}, '%')</if>
            <if test="patientSex != null "> and patient_sex = #{patientSex}</if>
            <if test="patientBirthDate != null "> and patient_birth_date = #{patientBirthDate}</if>
            <if test="patientAge != null "> and patient_age = #{patientAge}</if>
            <if test="patientIdCardNum != null  and patientIdCardNum != ''"> and patient_id_card_num like concat('%', #{patientIdCardNum}, '%')</if>
            <if test="patientMedCardNum != null  and patientMedCardNum != ''"> and patient_med_card_num like concat('%', #{patientMedCardNum}, '%')</if>
            <if test="patientPhoneNum != null  and patientPhoneNum != ''"> and patient_phone_num like concat('%', #{patientPhoneNum}, '%')</if>
        </where>
    </select>
    
    <select id="selectHisPatientsDiagByPatientId" parameterType="Long" resultMap="HisPatientsDiagHisMedicalRecordResult">
        select a.patient_id, a.user_id, a.patient_name, a.patient_sex, a.patient_birth_date, a.patient_age, a.patient_id_card_num, a.patient_med_card_num, a.patient_phone_num,
 b.rec_id as sub_rec_id, b.patient_id as sub_patient_id, b.rec_time as sub_rec_time, b.rec_chief_complaint as sub_rec_chief_complaint, b.reg_diagnosis as sub_reg_diagnosis, b.reg_notes as sub_reg_notes
        from his_patients a
        left join his_medical_record b on b.patient_id = a.patient_id
        where a.patient_id = #{patientId}
    </select>
        
    <insert id="insertHisPatientsDiag" parameterType="HisPatientsDiag" useGeneratedKeys="true" keyProperty="patientId">
        insert into his_patients
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="patientName != null and patientName != ''">patient_name,</if>
            <if test="patientSex != null">patient_sex,</if>
            <if test="patientBirthDate != null">patient_birth_date,</if>
            <if test="patientAge != null">patient_age,</if>
            <if test="patientIdCardNum != null">patient_id_card_num,</if>
            <if test="patientMedCardNum != null">patient_med_card_num,</if>
            <if test="patientPhoneNum != null">patient_phone_num,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="patientName != null and patientName != ''">#{patientName},</if>
            <if test="patientSex != null">#{patientSex},</if>
            <if test="patientBirthDate != null">#{patientBirthDate},</if>
            <if test="patientAge != null">#{patientAge},</if>
            <if test="patientIdCardNum != null">#{patientIdCardNum},</if>
            <if test="patientMedCardNum != null">#{patientMedCardNum},</if>
            <if test="patientPhoneNum != null">#{patientPhoneNum},</if>
         </trim>
    </insert>

    <update id="updateHisPatientsDiag" parameterType="HisPatientsDiag">
        update his_patients
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="patientName != null and patientName != ''">patient_name = #{patientName},</if>
            <if test="patientSex != null">patient_sex = #{patientSex},</if>
            <if test="patientBirthDate != null">patient_birth_date = #{patientBirthDate},</if>
            <if test="patientAge != null">patient_age = #{patientAge},</if>
            <if test="patientIdCardNum != null">patient_id_card_num = #{patientIdCardNum},</if>
            <if test="patientMedCardNum != null">patient_med_card_num = #{patientMedCardNum},</if>
            <if test="patientPhoneNum != null">patient_phone_num = #{patientPhoneNum},</if>
        </trim>
        where patient_id = #{patientId}
    </update>

    <delete id="deleteHisPatientsDiagByPatientId" parameterType="Long">
        delete from his_patients where patient_id = #{patientId}
    </delete>

    <delete id="deleteHisPatientsDiagByPatientIds" parameterType="String">
        delete from his_patients where patient_id in 
        <foreach item="patientId" collection="array" open="(" separator="," close=")">
            #{patientId}
        </foreach>
    </delete>
    
    <delete id="deleteHisMedicalRecordByPatientIds" parameterType="String">
        delete from his_medical_record where patient_id in 
        <foreach item="patientId" collection="array" open="(" separator="," close=")">
            #{patientId}
        </foreach>
    </delete>

    <delete id="deleteHisMedicalRecordByPatientId" parameterType="Long">
        delete from his_medical_record where patient_id = #{patientId}
    </delete>

    <insert id="batchHisMedicalRecord">
        insert into his_medical_record( rec_id, patient_id, rec_time, rec_chief_complaint, reg_diagnosis, reg_notes) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.recId}, #{item.patientId}, #{item.recTime}, #{item.recChiefComplaint}, #{item.regDiagnosis}, #{item.regNotes})
        </foreach>
    </insert>

</mapper>